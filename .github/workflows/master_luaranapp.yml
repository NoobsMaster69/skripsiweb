name: Build and deploy PHP app to Azure Web App - LuaranApp

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, xml, ctype, json, bcmath, pdo, mysql, curl, zip, gd, fileinfo
          tools: composer:v2
          
      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --no-dev --optimize-autoloader --no-interaction
        
      - name: Create production environment file
        run: |
          cat > .env << 'EOF'
          APP_NAME=LuaranApp
          APP_ENV=production
          APP_KEY=
          APP_DEBUG=false
          APP_URL=https://luaranapp-b6ftembfh3hae0hs.canadacentral-01.azurewebsites.net
          
          LOG_CHANNEL=stack
          LOG_LEVEL=error
          
          # Menggunakan Azure MySQL environment variables
          DB_CONNECTION=mysql
          DB_HOST=${AZURE_MYSQL_MYSQL_29B1B_HOST}
          DB_PORT=${AZURE_MYSQL_MYSQL_29B1B_PORT}
          DB_DATABASE=${AZURE_MYSQL_MYSQL_29B1B_DBNAME}
          DB_USERNAME=${AZURE_MYSQL_MYSQL_29B1B_USERNAME}
          DB_PASSWORD=${AZURE_MYSQL_MYSQL_29B1B_PASSWORD}
          
          SESSION_DRIVER=database
          SESSION_LIFETIME=120
          SESSION_ENCRYPT=false
          SESSION_PATH=/
          SESSION_DOMAIN=null
          
          CACHE_STORE=database
          QUEUE_CONNECTION=database
          
          MAIL_MAILER=log
          MAIL_FROM_ADDRESS="hello@luaranapp.com"
          MAIL_FROM_NAME="${APP_NAME}"
          EOF
          
      - name: Generate application key
        run: php artisan key:generate
        
      - name: Create storage directories and set permissions
        run: |
          mkdir -p storage/logs
          mkdir -p storage/framework/cache/data
          mkdir -p storage/framework/sessions
          mkdir -p storage/framework/views
          mkdir -p storage/app/public
          chmod -R 775 storage
          chmod -R 775 bootstrap/cache
          
      - name: Create symbolic link for storage
        run: php artisan storage:link
        
      - name: Fix public/index.php file
        run: |
          cat > public/index.php << 'EOF'
          <?php
          
          use Illuminate\Contracts\Http\Kernel;
          use Illuminate\Http\Request;
          
          define('LARAVEL_START', microtime(true));
          
          if (file_exists($maintenance = __DIR__.'/../storage/framework/maintenance.php')) {
              require $maintenance;
          }
          
          require __DIR__.'/../vendor/autoload.php';
          
          $app = require_once __DIR__.'/../bootstrap/app.php';
          
          $kernel = $app->make(Kernel::class);
          
          $response = $kernel->handle(
              $request = Request::capture()
          )->send();
          
          $kernel->terminate($request, $response);
          EOF
        
      - name: Run database migrations
        run: php artisan migrate --force
        
      - name: Basic optimization
        run: |
          php artisan config:cache
          php artisan view:cache
          # Skip route:cache untuk menghindari konflik
          
      - name: Create web.config for Azure
        run: |
          cat > web.config << 'EOF'
          <?xml version="1.0" encoding="utf-8"?>
          <configuration>
            <system.webServer>
              <rewrite>
                <rules>
                  <rule name="Imported Rule 1" stopProcessing="true">
                    <match url="^(.*)/$" ignoreCase="false" />
                    <conditions>
                      <add input="{REQUEST_FILENAME}" matchType="IsDirectory" ignoreCase="false" negate="true" />
                    </conditions>
                    <action type="Redirect" redirectType="Permanent" url="/{R:1}" />
                  </rule>
                  <rule name="Imported Rule 2" stopProcessing="true">
                    <match url="^" ignoreCase="false" />
                    <conditions>
                      <add input="{REQUEST_FILENAME}" matchType="IsDirectory" ignoreCase="false" negate="true" />
                      <add input="{REQUEST_FILENAME}" matchType="IsFile" ignoreCase="false" negate="true" />
                    </conditions>
                    <action type="Rewrite" url="public/index.php" />
                  </rule>
                </rules>
              </rewrite>
            </system.webServer>
          </configuration>
          EOF
          
      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: php-app
          path: .

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write
      contents: read
      
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: php-app
      
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_2F0C83C80DCD4ED38E14D586E65705AA }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_9CAAB9BA4BB24D76A715812C4B532BC9 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_04CD588BC5F740D2BFCD64C01D566CD1 }}
          
      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v3
        id: deploy-to-webapp
        with:
          app-name: 'LuaranApp'
          slot-name: 'Production'
          package: .
          
      - name: 'Run post-deployment commands'
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'LuaranApp'
          slot-name: 'Production'
          package: .
          startup-command: 'cd /home/site/wwwroot && php artisan migrate --force && php artisan config:cache'
